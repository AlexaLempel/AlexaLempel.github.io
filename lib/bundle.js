(()=>{"use strict";const i="white",t="black";class s{constructor(i,s){this.gridSize=i,this.winningSequence=s,this.color=t,this.grid=this.buildGrid(this.gridSize),this.lastPos=null,this.stoneCount=0,this.jumpCounts=[0,0]}buildGrid(i){let t=[];for(let s=0;s<i;s++){let s=[];for(let t=0;t<i;t++)s.push(0);t.push(s)}return t}placeStone(t){const[s,e]=t;if(s<0||s>14||e<0||e>14||0!==this.grid[s][e])throw"Invalid move!";this.grid[s][e]=this.color===i?1:2,this.lastPos=t,this.stoneCount+=1}switchColor(){this.color=this.color===i?t:i}addJump(i){this.jumpCounts[i-1]+=1}checkForJump(){this.checkRowJump(),this.checkColJump(),this.checkUpDiagJump(),this.checkDownDiagJump()}checkRowJump(){const i=this.lastPos[0],t=this.lastPos[1],s=this.grid[i][t],e=1===s?2:1;let r=t-3;r>=0&&this.grid[i][r]===s&&this.grid[i][r+1]===e&&this.grid[i][r+2]===e&&(this.addJump(s),this.grid[i][r+1]=0,this.grid[i][r+2]=0),r=t+3,r<this.gridSize&&this.grid[i][r]===s&&this.grid[i][r-1]===e&&this.grid[i][r-2]===e&&(this.addJump(s),this.grid[i][r-1]=0,this.grid[i][r-2]=0)}checkColJump(){const i=this.lastPos[0],t=this.lastPos[1],s=this.grid[i][t],e=1===s?2:1;let r=i-3;r>=0&&this.grid[r][t]===s&&this.grid[r+1][t]===e&&this.grid[r+2][t]===e&&(this.addJump(s),this.grid[r+1][t]=0,this.grid[r+2][t]=0),r=i+3,r<this.gridSize&&this.grid[r][t]===s&&this.grid[r-1][t]===e&&this.grid[r-2][t]===e&&(this.addJump(s),this.grid[r-1][t]=0,this.grid[r-2][t]=0)}checkUpDiagJump(){const i=this.lastPos[0],t=this.lastPos[1],s=this.grid[i][t],e=1===s?2:1;let r=i-3,h=t-3;r>=0&&h>=0&&this.grid[r][h]===s&&this.grid[r+1][h+1]===e&&this.grid[r+2][h+2]===e&&(this.addJump(s),this.grid[r+1][h+1]=0,this.grid[r+2][h+2]=0),r=i+3,h=t+3,r<this.gridSize&&h<this.gridSize&&this.grid[r][h]===s&&this.grid[r-1][h-1]===e&&this.grid[r-2][h-2]===e&&(this.addJump(s),this.grid[r-1][h-1]=0,this.grid[r-2][h-2]=0)}checkDownDiagJump(){const i=this.lastPos[0],t=this.lastPos[1],s=this.grid[i][t],e=1===s?2:1;let r=i-3,h=t+3;r>=0&&h<this.gridSize&&this.grid[r][h]===s&&this.grid[r+1][h-1]===e&&this.grid[r+2][h-2]===e&&(this.addJump(s),this.grid[r+1][h-1]=0,this.grid[r+2][h-2]=0),r=i+3,h=t-3,r<this.gridSize&&h>=0&&this.grid[r][h]===s&&this.grid[r-1][h+1]===e&&this.grid[r-2][h+2]===e&&(this.addJump(s),this.grid[r-1][h+1]=0,this.grid[r-2][h+2]=0)}checkForWinner(){return null!==this.lastPos&&(this.jumpCounts[0]>=this.winningSequence||this.jumpCounts[1]>=this.winningSequence||!!this.rowWinner()||!!this.columnWinner()||!!this.upDiagWinner()||!!this.downDiagWinner())}rowWinner(){const i=this.lastPos[0],t=this.lastPos[1],s=this.grid[i][t];let e=0;for(let r=t-4;r<=t+4;r++)if(!(r<0)){if(r>=this.gridSize)break;if(this.grid[i][r]===s?e+=1:e=0,e===this.winningSequence)return!0}}columnWinner(){const i=this.lastPos[0],t=this.lastPos[1],s=this.grid[i][t];let e=0;for(let r=i-4;r<=i+4;r++)if(!(r<0)){if(r>=this.gridSize)break;if(this.grid[r][t]===s?e+=1:e=0,e===this.winningSequence)return!0}}upDiagWinner(){const i=this.lastPos[0],t=this.lastPos[1],s=this.grid[i][t];let e=0;for(let r=-4;r<=4;r++){const h=i-r,d=t+r;if(!(h>=this.gridSize||d<0)){if(h<0||d>=this.gridSize)break;if(this.grid[h][d]===s?e+=1:e=0,e===this.winningSequence)return!0}}}downDiagWinner(){const i=this.lastPos[0],t=this.lastPos[1],s=this.grid[i][t];let e=0;for(let r=-4;r<=4;r++){const h=i+r,d=t+r;if(h>=this.gridSize||d>=this.gridSize)break;if(!(h<0||d<0)&&(this.grid[h][d]===s?e+=1:e=0,e===this.winningSequence))return!0}}}const e="PLAYER1";class r{constructor(i,t,r=new s(15,5)){this.player1=i,this.player2=t,this.board=r,this.currentPlayer=e}isOver(){return this.board.checkForWinner()}switchPlayer(){this.board.switchColor(),this.currentPlayer=this.currentPlayer===e?"PLAYER2":e}}class h{constructor(i,t){this.board=i,this.ctx=t,this.drawBoard()}drawBoard(){const i=document.getElementById("canvas"),t=this.ctx;t.fillStyle="#dbb870",t.fillRect(0,0,i.width,i.height);for(let i=0;i<=14;i++)t.beginPath(),t.strokeStyle="black",t.moveTo(35*i+35.5,35.5),t.lineTo(35*i+35.5,525),t.stroke(),t.beginPath(),t.strokeStyle="black",t.moveTo(35.5,35*i+35.5),t.lineTo(525,35*i+35.5),t.stroke(),t.closePath();t.fillStyle="black",t.fillRect(137,137,6,6),t.fillRect(417,137,6,6),t.fillRect(277,277,6,6),t.fillRect(137,417,6,6),t.fillRect(417,417,6,6)}renderPos(i){const t=this.board,s=this.ctx,[e,r]=i;0!==t[e][r]&&(1===t[e][r]?this.drawPiece(s,e,r,"#fff","#bbb"):this.drawPiece(s,e,r,"#404040","#0d0d0d"))}renderJumps(i){for(var t=i.jumpCounts[1],s=i.jumpCounts[0],e=0;e<t;e++){const i=document.getElementById("blackJumps").getContext("2d");this.drawPiece(i,3*e,0,"#fff","#bbb"),this.drawPiece(i,3*e+1,0,"#fff","#bbb")}for(e=0;e<s;e++){const i=document.getElementById("whiteJumps").getContext("2d");this.drawPiece(i,3*e,0,"#404040","#0d0d0d"),this.drawPiece(i,3*e+1,0,"#404040","#0d0d0d")}}drawPiece(i,t,s,e,r){const h=i.createRadialGradient(35*s+35,35*t+35,12,35*s+30,35*t+30,20);h.addColorStop(0,e),h.addColorStop(1,r),i.fillStyle=h,i.beginPath(),i.arc(35*s+35,35*t+35,15,0,2*Math.PI),i.closePath(),i.fill()}render(i){this.board=i.grid;for(let t=0;t<i.gridSize;t++)for(let s=0;s<i.gridSize;s++)this.renderPos([t,s]);this.renderJumps(i)}}class d{constructor(i){this.name=i}}document.addEventListener("DOMContentLoaded",(()=>{const i=document.getElementById("canvas"),t=i.getContext("2d");i.width=561,i.height=561;const s=new d("Player1");let e=new d("Player2"),o=new r(s,e),n=new h(o.board.grid,t);const c=t=>{const s=t.pageY-i.offsetTop-35,e=t.pageX-i.offsetLeft-35,r=[Math.round(s/35),Math.round(e/35)];try{o.board.placeStone(r),o.board.checkForJump(),n.drawBoard(),n.render(o.board),o.switchPlayer(),o.isOver()&&(i.removeEventListener("mousedown",c),setTimeout((()=>{l.classList.add("active-modal")}),1500))}catch(i){console.log(i)}},l=document.getElementById("game-over-modal");i.addEventListener("mousedown",c)}))})();