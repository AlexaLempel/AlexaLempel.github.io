/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _game = __webpack_require__(/*! ./lib/game */ \"./lib/game.js\");\n\nvar _game2 = _interopRequireDefault(_game);\n\nvar _display = __webpack_require__(/*! ./lib/display */ \"./lib/display.js\");\n\nvar _display2 = _interopRequireDefault(_display);\n\nvar _player = __webpack_require__(/*! ./lib/player */ \"./lib/player.js\");\n\nvar _player2 = _interopRequireDefault(_player);\n\nvar _computer = __webpack_require__(/*! ./lib/computer */ \"./lib/computer.js\");\n\nvar _computer2 = _interopRequireDefault(_computer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CELL_SIZE = 35;\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  var canvasEl = document.getElementById(\"canvas\");\n  var ctx = canvasEl.getContext(\"2d\");\n  canvasEl.width = CELL_SIZE * 14 + 1;\n  canvasEl.height = CELL_SIZE * 14 + 1;\n  var player1 = new _player2.default(\"Player1\");\n  // const player2 = new Player(\"Player2\");\n  var player2 = new _computer2.default(\"Player2\");\n  var game = new _game2.default(player1, player2);\n  var display = new _display2.default(game.board.grid, ctx);\n\n  // testing\n  window.game = game;\n  window.relevantMoves = player2.relevantMoves;\n\n  var clickHandler = function clickHandler(e) {\n    // const xPosition = e.clientY;\n    // const yPosition = e.clientX;\n    var xPosition = e.pageY - canvasEl.offsetTop;\n    var yPosition = e.pageX - canvasEl.offsetLeft;\n    console.log([Math.round(xPosition / 35), Math.round(yPosition / 35)]);\n    var move = [Math.round(xPosition / 35), Math.round(yPosition / 35)];\n    try {\n      game.board.placeStone(move);\n      // canvasEl.removeEventListener(\"mousedown\", clickHandler);\n      display.render(move);\n      game.switchPlayer();\n    } catch (error) {\n      console.log(error);\n    }\n\n    if (game.isOver()) {\n      console.log(\"Game over!\");\n      canvasEl.removeEventListener(\"mousedown\", clickHandler);\n    } else if (game.currentPlayer === \"PLAYER2\" && player2 instanceof _computer2.default) {\n      setTimeout(function () {\n        canvasEl.removeEventListener(\"mousedown\", clickHandler);\n        var cpuMove = player2.getMove(game.board);\n        game.board.placeStone(cpuMove);\n        display.render(cpuMove);\n\n        if (game.isOver()) {\n          console.log(\"Game over!\");\n        } else {\n          game.switchPlayer();\n          canvasEl.addEventListener(\"mousedown\", clickHandler);\n        }\n      }, 15);\n    }\n  };\n\n  canvasEl.addEventListener(\"mousedown\", clickHandler);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9pbmRleC5qcz80MWY1Il0sIm5hbWVzIjpbIkNFTExfU0laRSIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNhbnZhc0VsIiwiZ2V0RWxlbWVudEJ5SWQiLCJjdHgiLCJnZXRDb250ZXh0Iiwid2lkdGgiLCJoZWlnaHQiLCJwbGF5ZXIxIiwiUGxheWVyIiwicGxheWVyMiIsIkNvbXB1dGVyIiwiZ2FtZSIsIkdhbWUiLCJkaXNwbGF5IiwiRGlzcGxheSIsImJvYXJkIiwiZ3JpZCIsIndpbmRvdyIsInJlbGV2YW50TW92ZXMiLCJjbGlja0hhbmRsZXIiLCJlIiwieFBvc2l0aW9uIiwicGFnZVkiLCJvZmZzZXRUb3AiLCJ5UG9zaXRpb24iLCJwYWdlWCIsIm9mZnNldExlZnQiLCJjb25zb2xlIiwibG9nIiwiTWF0aCIsInJvdW5kIiwibW92ZSIsInBsYWNlU3RvbmUiLCJyZW5kZXIiLCJzd2l0Y2hQbGF5ZXIiLCJlcnJvciIsImlzT3ZlciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjdXJyZW50UGxheWVyIiwic2V0VGltZW91dCIsImNwdU1vdmUiLCJnZXRNb3ZlIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFFQSxJQUFNQSxZQUFZLEVBQWxCOztBQUdBQyxTQUFTQyxnQkFBVCxDQUEwQixrQkFBMUIsRUFBOEMsWUFBTTtBQUNsRCxNQUFNQyxXQUFXRixTQUFTRyxjQUFULENBQXdCLFFBQXhCLENBQWpCO0FBQ0EsTUFBTUMsTUFBTUYsU0FBU0csVUFBVCxDQUFvQixJQUFwQixDQUFaO0FBQ0FILFdBQVNJLEtBQVQsR0FBaUJQLFlBQVksRUFBWixHQUFpQixDQUFsQztBQUNBRyxXQUFTSyxNQUFULEdBQWtCUixZQUFZLEVBQVosR0FBaUIsQ0FBbkM7QUFDQSxNQUFNUyxVQUFVLElBQUlDLGdCQUFKLENBQVcsU0FBWCxDQUFoQjtBQUNBO0FBQ0EsTUFBTUMsVUFBVSxJQUFJQyxrQkFBSixDQUFhLFNBQWIsQ0FBaEI7QUFDQSxNQUFNQyxPQUFPLElBQUlDLGNBQUosQ0FBU0wsT0FBVCxFQUFrQkUsT0FBbEIsQ0FBYjtBQUNBLE1BQU1JLFVBQVUsSUFBSUMsaUJBQUosQ0FBWUgsS0FBS0ksS0FBTCxDQUFXQyxJQUF2QixFQUE2QmIsR0FBN0IsQ0FBaEI7O0FBRUY7QUFDRWMsU0FBT04sSUFBUCxHQUFjQSxJQUFkO0FBQ0FNLFNBQU9DLGFBQVAsR0FBdUJULFFBQVFTLGFBQS9COztBQUVBLE1BQU1DLGVBQWUsU0FBZkEsWUFBZSxDQUFDQyxDQUFELEVBQU87QUFDMUI7QUFDQTtBQUNBLFFBQU1DLFlBQVlELEVBQUVFLEtBQUYsR0FBVXJCLFNBQVNzQixTQUFyQztBQUNBLFFBQU1DLFlBQVlKLEVBQUVLLEtBQUYsR0FBVXhCLFNBQVN5QixVQUFyQztBQUNBQyxZQUFRQyxHQUFSLENBQVksQ0FBQ0MsS0FBS0MsS0FBTCxDQUFXVCxZQUFVLEVBQXJCLENBQUQsRUFBMkJRLEtBQUtDLEtBQUwsQ0FBV04sWUFBVSxFQUFyQixDQUEzQixDQUFaO0FBQ0EsUUFBTU8sT0FBTyxDQUFDRixLQUFLQyxLQUFMLENBQVdULFlBQVUsRUFBckIsQ0FBRCxFQUEyQlEsS0FBS0MsS0FBTCxDQUFXTixZQUFVLEVBQXJCLENBQTNCLENBQWI7QUFDQSxRQUFJO0FBQ0ZiLFdBQUtJLEtBQUwsQ0FBV2lCLFVBQVgsQ0FBc0JELElBQXRCO0FBQ0E7QUFDQWxCLGNBQVFvQixNQUFSLENBQWVGLElBQWY7QUFDQXBCLFdBQUt1QixZQUFMO0FBQ0QsS0FMRCxDQU1BLE9BQU1DLEtBQU4sRUFBYTtBQUNYUixjQUFRQyxHQUFSLENBQVlPLEtBQVo7QUFDRDs7QUFFRCxRQUFJeEIsS0FBS3lCLE1BQUwsRUFBSixFQUFrQjtBQUNoQlQsY0FBUUMsR0FBUixDQUFZLFlBQVo7QUFDQTNCLGVBQVNvQyxtQkFBVCxDQUE2QixXQUE3QixFQUEwQ2xCLFlBQTFDO0FBQ0QsS0FIRCxNQUdPLElBQUlSLEtBQUsyQixhQUFMLEtBQXVCLFNBQXZCLElBQW9DN0IsbUJBQW1CQyxrQkFBM0QsRUFBcUU7QUFDMUU2QixpQkFBVyxZQUFNO0FBQ2Z0QyxpQkFBU29DLG1CQUFULENBQTZCLFdBQTdCLEVBQTBDbEIsWUFBMUM7QUFDQSxZQUFNcUIsVUFBVS9CLFFBQVFnQyxPQUFSLENBQWdCOUIsS0FBS0ksS0FBckIsQ0FBaEI7QUFDQUosYUFBS0ksS0FBTCxDQUFXaUIsVUFBWCxDQUFzQlEsT0FBdEI7QUFDQTNCLGdCQUFRb0IsTUFBUixDQUFlTyxPQUFmOztBQUVBLFlBQUk3QixLQUFLeUIsTUFBTCxFQUFKLEVBQWtCO0FBQ2hCVCxrQkFBUUMsR0FBUixDQUFZLFlBQVo7QUFDRCxTQUZELE1BRU07QUFDSmpCLGVBQUt1QixZQUFMO0FBQ0FqQyxtQkFBU0QsZ0JBQVQsQ0FBMEIsV0FBMUIsRUFBdUNtQixZQUF2QztBQUNEO0FBQ0YsT0FaRCxFQVlHLEVBWkg7QUFhRDtBQUVGLEdBcENEOztBQXNDQWxCLFdBQVNELGdCQUFULENBQTBCLFdBQTFCLEVBQXVDbUIsWUFBdkM7QUFDRCxDQXRERCIsImZpbGUiOiIuL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdhbWUgZnJvbSBcIi4vbGliL2dhbWVcIjtcbmltcG9ydCBEaXNwbGF5IGZyb20gXCIuL2xpYi9kaXNwbGF5XCI7XG5pbXBvcnQgUGxheWVyIGZyb20gXCIuL2xpYi9wbGF5ZXJcIjtcbmltcG9ydCBDb21wdXRlciBmcm9tIFwiLi9saWIvY29tcHV0ZXJcIjtcblxuY29uc3QgQ0VMTF9TSVpFID0gMzU7XG5cblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xuICBjb25zdCBjYW52YXNFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzXCIpO1xuICBjb25zdCBjdHggPSBjYW52YXNFbC5nZXRDb250ZXh0KFwiMmRcIik7XG4gIGNhbnZhc0VsLndpZHRoID0gQ0VMTF9TSVpFICogMTQgKyAxO1xuICBjYW52YXNFbC5oZWlnaHQgPSBDRUxMX1NJWkUgKiAxNCArIDE7XG4gIGNvbnN0IHBsYXllcjEgPSBuZXcgUGxheWVyKFwiUGxheWVyMVwiKTtcbiAgLy8gY29uc3QgcGxheWVyMiA9IG5ldyBQbGF5ZXIoXCJQbGF5ZXIyXCIpO1xuICBjb25zdCBwbGF5ZXIyID0gbmV3IENvbXB1dGVyKFwiUGxheWVyMlwiKTtcbiAgY29uc3QgZ2FtZSA9IG5ldyBHYW1lKHBsYXllcjEsIHBsYXllcjIpO1xuICBjb25zdCBkaXNwbGF5ID0gbmV3IERpc3BsYXkoZ2FtZS5ib2FyZC5ncmlkLCBjdHgpO1xuXG4vLyB0ZXN0aW5nXG4gIHdpbmRvdy5nYW1lID0gZ2FtZTtcbiAgd2luZG93LnJlbGV2YW50TW92ZXMgPSBwbGF5ZXIyLnJlbGV2YW50TW92ZXM7XG5cbiAgY29uc3QgY2xpY2tIYW5kbGVyID0gKGUpID0+IHtcbiAgICAvLyBjb25zdCB4UG9zaXRpb24gPSBlLmNsaWVudFk7XG4gICAgLy8gY29uc3QgeVBvc2l0aW9uID0gZS5jbGllbnRYO1xuICAgIGNvbnN0IHhQb3NpdGlvbiA9IGUucGFnZVkgLSBjYW52YXNFbC5vZmZzZXRUb3A7XG4gICAgY29uc3QgeVBvc2l0aW9uID0gZS5wYWdlWCAtIGNhbnZhc0VsLm9mZnNldExlZnQ7XG4gICAgY29uc29sZS5sb2coW01hdGgucm91bmQoeFBvc2l0aW9uLzM1KSwgTWF0aC5yb3VuZCh5UG9zaXRpb24vMzUpXSk7XG4gICAgY29uc3QgbW92ZSA9IFtNYXRoLnJvdW5kKHhQb3NpdGlvbi8zNSksIE1hdGgucm91bmQoeVBvc2l0aW9uLzM1KV07XG4gICAgdHJ5IHtcbiAgICAgIGdhbWUuYm9hcmQucGxhY2VTdG9uZShtb3ZlKTtcbiAgICAgIC8vIGNhbnZhc0VsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgY2xpY2tIYW5kbGVyKTtcbiAgICAgIGRpc3BsYXkucmVuZGVyKG1vdmUpO1xuICAgICAgZ2FtZS5zd2l0Y2hQbGF5ZXIoKTtcbiAgICB9XG4gICAgY2F0Y2goZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICB9XG5cbiAgICBpZiAoZ2FtZS5pc092ZXIoKSl7XG4gICAgICBjb25zb2xlLmxvZyhcIkdhbWUgb3ZlciFcIik7XG4gICAgICBjYW52YXNFbC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIGNsaWNrSGFuZGxlcik7XG4gICAgfSBlbHNlIGlmIChnYW1lLmN1cnJlbnRQbGF5ZXIgPT09IFwiUExBWUVSMlwiICYmIHBsYXllcjIgaW5zdGFuY2VvZiBDb21wdXRlcikge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNhbnZhc0VsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgY2xpY2tIYW5kbGVyKTtcbiAgICAgICAgY29uc3QgY3B1TW92ZSA9IHBsYXllcjIuZ2V0TW92ZShnYW1lLmJvYXJkKTtcbiAgICAgICAgZ2FtZS5ib2FyZC5wbGFjZVN0b25lKGNwdU1vdmUpO1xuICAgICAgICBkaXNwbGF5LnJlbmRlcihjcHVNb3ZlKTtcblxuICAgICAgICBpZiAoZ2FtZS5pc092ZXIoKSl7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJHYW1lIG92ZXIhXCIpO1xuICAgICAgICB9ZWxzZSB7XG4gICAgICAgICAgZ2FtZS5zd2l0Y2hQbGF5ZXIoKTtcbiAgICAgICAgICBjYW52YXNFbC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIGNsaWNrSGFuZGxlcik7XG4gICAgICAgIH1cbiAgICAgIH0sIDE1KTtcbiAgICB9XG5cbiAgfTtcblxuICBjYW52YXNFbC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIGNsaWNrSGFuZGxlcik7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./index.js\n");

/***/ }),

/***/ "./lib/board.js":
/*!**********************!*\
  !*** ./lib/board.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar WHITE = \"white\";\nvar BLACK = \"black\";\n\nvar Board = function () {\n  function Board(gridSize, winningSequence) {\n    _classCallCheck(this, Board);\n\n    this.gridSize = gridSize;\n    this.winningSequence = winningSequence;\n    this.color = BLACK;\n    this.grid = this.buildGrid(this.gridSize);\n    this.lastPos = null;\n    this.stoneCount = 0;\n  }\n\n  _createClass(Board, [{\n    key: \"buildGrid\",\n    value: function buildGrid(size) {\n      var grid = [];\n      for (var i = 0; i < size; i++) {\n        var row = [];\n\n        for (var j = 0; j < size; j++) {\n          row.push(0);\n        }\n\n        grid.push(row);\n      }\n      return grid;\n    }\n  }, {\n    key: \"placeStone\",\n    value: function placeStone(pos) {\n      var _pos = _slicedToArray(pos, 2),\n          row = _pos[0],\n          col = _pos[1];\n\n      if (this.grid[row][col] !== 0) {\n        throw \"Invalid move!\";\n      }\n      this.grid[row][col] = this.color === WHITE ? 1 : 2;\n      this.lastPos = pos;\n      this.stoneCount += 1;\n    }\n    // default is 0, white is 1, black is 2\n\n  }, {\n    key: \"switchColor\",\n    value: function switchColor() {\n      this.color = this.color === WHITE ? BLACK : WHITE;\n    }\n  }, {\n    key: \"checkForWinner\",\n    value: function checkForWinner() {\n      if (this.lastPos === null) return false;\n      if (this.rowWinner()) return true;\n      if (this.columnWinner()) return true;\n      if (this.upDiagWinner()) return true;\n      if (this.downDiagWinner()) return true;\n      return false;\n    }\n  }, {\n    key: \"rowWinner\",\n    value: function rowWinner() {\n      var pieceRow = this.lastPos[0];\n      var pieceCol = this.lastPos[1];\n      var pieceNum = this.grid[pieceRow][pieceCol];\n\n      var counter = 0;\n\n      for (var col = pieceCol - 4; col <= pieceCol + 4; col++) {\n        if (col < 0) continue;\n        if (col >= this.gridSize) break;\n\n        if (this.grid[pieceRow][col] === pieceNum) {\n          counter += 1;\n        } else {\n          counter = 0;\n        }\n\n        if (counter === this.winningSequence) return true;\n      }\n    }\n  }, {\n    key: \"columnWinner\",\n    value: function columnWinner() {\n      var pieceRow = this.lastPos[0];\n      var pieceCol = this.lastPos[1];\n      var pieceNum = this.grid[pieceRow][pieceCol];\n\n      var counter = 0;\n\n      for (var row = pieceRow - 4; row <= pieceRow + 4; row++) {\n        if (row < 0) continue;\n        if (row >= this.gridSize) break;\n\n        if (this.grid[row][pieceCol] === pieceNum) {\n          counter += 1;\n        } else {\n          counter = 0;\n        }\n\n        if (counter === this.winningSequence) return true;\n      }\n    }\n  }, {\n    key: \"upDiagWinner\",\n    value: function upDiagWinner() {\n      var pieceRow = this.lastPos[0];\n      var pieceCol = this.lastPos[1];\n      var pieceNum = this.grid[pieceRow][pieceCol];\n\n      var counter = 0;\n\n      for (var offset = -4; offset <= 4; offset++) {\n        var checkRow = pieceRow - offset;\n        var checkCol = pieceCol + offset;\n\n        if (checkRow >= this.gridSize || checkCol < 0) continue;\n        if (checkRow < 0 || checkCol >= this.gridSize) break;\n\n        if (this.grid[checkRow][checkCol] === pieceNum) {\n          counter += 1;\n        } else {\n          counter = 0;\n        }\n\n        if (counter === this.winningSequence) return true;\n      }\n    }\n  }, {\n    key: \"downDiagWinner\",\n    value: function downDiagWinner() {\n      var pieceRow = this.lastPos[0];\n      var pieceCol = this.lastPos[1];\n      var pieceNum = this.grid[pieceRow][pieceCol];\n\n      var counter = 0;\n\n      for (var offset = -4; offset <= 4; offset++) {\n        var checkRow = pieceRow + offset;\n        var checkCol = pieceCol + offset;\n\n        if (checkRow >= this.gridSize || checkCol >= this.gridSize) break;\n        if (checkRow < 0 || checkCol < 0) continue;\n\n        if (this.grid[checkRow][checkCol] === pieceNum) {\n          counter += 1;\n        } else {\n          counter = 0;\n        }\n\n        if (counter === this.winningSequence) return true;\n      }\n    }\n  }]);\n\n  return Board;\n}();\n\nexports.default = Board;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/board.js\n");

/***/ }),

/***/ "./lib/computer.js":
/*!*************************!*\
  !*** ./lib/computer.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _player = __webpack_require__(/*! ./player */ \"./lib/player.js\");\n\nvar _player2 = _interopRequireDefault(_player);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Computer = function (_Player) {\n  _inherits(Computer, _Player);\n\n  function Computer(name) {\n    _classCallCheck(this, Computer);\n\n    return _possibleConstructorReturn(this, (Computer.__proto__ || Object.getPrototypeOf(Computer)).call(this, name));\n  }\n\n  _createClass(Computer, [{\n    key: \"nearbyMoves\",\n    value: function nearbyMoves(grid) {\n      var nearby = [];\n\n      for (var i = 0; i < grid.length; i++) {\n        nearby[i] = [];\n      }\n\n      for (var _i = 0; _i < grid.length; _i++) {\n        for (var j = 0; j < grid.length; j++) {\n          if (grid[_i][j]) {\n            // domain specific knowledge to reduce search space\n            var xMax = Math.min(_i + 1, grid.length - 1);\n            var yMax = Math.min(j + 1, grid.length - 1);\n\n            for (var x = Math.max(_i - 1, 0); x <= xMax; x++) {\n              for (var y = Math.max(j - 1, 0); y <= yMax; y++) {\n                nearby[x][y] = true;\n              }\n            }\n          }\n        }\n      }\n      return nearby;\n    }\n  }, {\n    key: \"getMove\",\n    value: function getMove(board) {\n      // hard-code openings!!!!\n      var grid = board.grid;\n      var possibleMoves = this.nearbyMoves(grid);\n\n      var minimaxCurrentDepth = board.stoneCount + 1;\n      // current limit seems to be 4 moves ahead for target depth when expanding vision\n      // 5 moves ahead for limited vision\n      var minimaxTargetDepth = board.stoneCount + 3;\n      var cpuColor = board.stoneCount % 2 === 0 ? 2 : 1;\n\n      var position = void 0;\n      var score = Number.NEGATIVE_INFINITY;\n      for (var i = 0; i < grid.length; i++) {\n        for (var j = 0; j < grid.length; j++) {\n\n          if (possibleMoves[i][j] && !grid[i][j]) {\n            grid[i][j] = cpuColor;\n            var moveScore = this.minimax(grid, minimaxCurrentDepth, minimaxTargetDepth, false, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, possibleMoves, cpuColor);\n            grid[i][j] = 0;\n\n            if (moveScore > score) {\n              score = moveScore;\n              position = [i, j];\n            }\n          }\n        }\n      }\n      return position;\n    }\n  }, {\n    key: \"minimax\",\n    value: function minimax(grid, currentDepth, targetDepth, isMaximizingPlayer, alpha, beta, possibleMoves, cpuColor) {\n      // also need to check if its a terminal gamestate, i.e won!!!!!!!\n      if (currentDepth === targetDepth) {\n        return this.evaluate(grid, cpuColor);\n      }\n      // currentDepth relies on stoneCount\n      // black goes first, its placeholder is \"2\"\n      var currentColor = currentDepth % 2 === 0 ? 2 : 1;\n\n      if (isMaximizingPlayer) {\n        var bestVal = Number.NEGATIVE_INFINITY;\n\n        for (var i = 0; i < grid.length; i++) {\n          for (var j = 0; j < grid.length; j++) {\n            if (possibleMoves[i][j] && !grid[i][j]) {\n              grid[i][j] = currentColor;\n              var value = this.minimax(grid, currentDepth + 1, targetDepth, false, alpha, beta, possibleMoves, cpuColor);\n              grid[i][j] = 0;\n\n              bestVal = Math.max(bestVal, value);\n              alpha = Math.max(alpha, bestVal);\n              if (beta <= alpha) break;\n            }\n          }\n        }\n        return bestVal;\n      } else {\n        var _bestVal = Number.POSITIVE_INFINITY;\n\n        for (var _i2 = 0; _i2 < grid.length; _i2++) {\n          for (var _j = 0; _j < grid.length; _j++) {\n            if (possibleMoves[_i2][_j] && !grid[_i2][_j]) {\n              grid[_i2][_j] = currentColor;\n              var _value = this.minimax(grid, currentDepth + 1, targetDepth, true, alpha, beta, possibleMoves, cpuColor);\n              grid[_i2][_j] = 0;\n\n              _bestVal = Math.min(_bestVal, _value);\n              beta = Math.min(beta, _bestVal);\n              if (beta <= alpha) break;\n            }\n          }\n        }\n        return _bestVal;\n      }\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate(grid, cpuColor) {\n      var oppColor = cpuColor === 2 ? 1 : 2;\n\n      function hasFive(color) {\n        var count = 0;\n\n        for (var i = 0; i < grid.length; i++) {\n          for (var j = 0; j < grid.length; j++) {\n            if (j + 4 in grid && grid[i][j] === color && grid[i][j + 1] === color && grid[i][j + 2] === color && grid[i][j + 3] === color && grid[i][j + 4] === color) count++;else if (i + 4 in grid && grid[i][j] === color && grid[i + 1][j] === color && grid[i + 2][j] === color && grid[i + 3][j] === color && grid[i + 4][j] === color) count++;else if (i + 4 in grid && j + 4 in grid && grid[i][j] === color && grid[i + 1][j + 1] === color && grid[i + 2][j + 2] === color && grid[i + 3][j + 3] === color && grid[i + 4][j + 4] === color) count++;else if (i - 4 in grid && j + 4 in grid && grid[i][j] === color && grid[i - 1][j + 1] === color && grid[i - 2][j + 2] === color && grid[i - 3][j + 3] === color && grid[i - 4][j + 4] === color) count++;\n          }\n        }\n        return count;\n      }\n\n      function hasOpenFour(color) {\n        var count = 0;\n\n        for (var i = 0; i < grid.length; i++) {\n          for (var j = 0; j < grid.length; j++) {\n            if (j + 5 in grid && !grid[i][j] && grid[i][j + 1] === color && grid[i][j + 2] === color && grid[i][j + 3] === color && grid[i][j + 4] === color && !grid[i][j + 5]) count++;else if (i + 5 in grid && !grid[i][j] && grid[i + 1][j] === color && grid[i + 2][j] === color && grid[i + 3][j] === color && grid[i + 4][j] === color && !grid[i + 5][j]) count++;else if (i + 5 in grid && j + 5 in grid && !grid[i][j] && grid[i + 1][j + 1] === color && grid[i + 2][j + 2] === color && grid[i + 3][j + 3] === color && grid[i + 4][j + 4] === color && !grid[i + 5][j + 5]) count++;else if (i - 5 in grid && j + 5 in grid && !grid[i][j] && grid[i - 1][j + 1] === color && grid[i - 2][j + 2] === color && grid[i - 3][j + 3] === color && grid[i - 4][j + 4] === color && !grid[i - 5][j + 5]) count++;\n          }\n        }\n        return count;\n      }\n\n      function hasFour(color) {\n        var count = 0;\n\n        for (var i = 0; i < grid.length; i++) {\n          for (var j = 0; j < grid.length; j++) {\n            if (j + 4 in grid && !grid[i][j] && grid[i][j + 1] === color && grid[i][j + 2] === color && grid[i][j + 3] === color && grid[i][j + 4] === color || j + 4 in grid && grid[i][j] === color && grid[i][j + 1] === color && grid[i][j + 2] === color && grid[i][j + 3] === color && !grid[i][j + 4]) count++;\n            if (i + 4 in grid && !grid[i][j] && grid[i + 1][j] === color && grid[i + 2][j] === color && grid[i + 3][j] === color && grid[i + 4][j] === color || i + 4 in grid && grid[i][j] === color && grid[i + 1][j] === color && grid[i + 2][j] === color && grid[i + 3][j] === color && !grid[i + 4][j]) count++;\n            if (i + 4 in grid && j + 4 in grid && !grid[i][j] && grid[i + 1][j + 1] === color && grid[i + 2][j + 2] === color && grid[i + 3][j + 3] === color && grid[i + 4][j + 4] === color || i + 4 in grid && j + 4 in grid && grid[i][j] === color && grid[i + 1][j + 1] === color && grid[i + 2][j + 2] === color && grid[i + 3][j + 3] === color && !grid[i + 4][j + 4]) count++;\n            if (i - 4 in grid && j + 4 in grid && !grid[i][j] && grid[i - 1][j + 1] === color && grid[i - 2][j + 2] === color && grid[i - 3][j + 3] === color && grid[i - 4][j + 4] === color || i - 4 in grid && j + 4 in grid && grid[i][j] === color && grid[i - 1][j + 1] === color && grid[i - 2][j + 2] === color && grid[i - 3][j + 3] === color && !grid[i - 4][j + 4]) count++;\n          }\n        }\n        return count;\n      }\n\n      function hasOpenThree(color) {\n        var count = 0;\n\n        for (var i = 0; i < grid.length; i++) {\n          for (var j = 0; j < grid.length; j++) {\n            if (j + 6 in grid && !grid[i][j] && !grid[i][j + 1] && grid[i][j + 2] === color && grid[i][j + 3] === color && grid[i][j + 4] === color && !grid[i][j + 5] && !grid[i][j + 6]) count++;\n            if (i + 6 in grid && !grid[i][j] && !grid[i + 1][j] && grid[i + 2][j] === color && grid[i + 3][j] === color && grid[i + 4][j] === color && !grid[i + 5][j] && !grid[i + 6][j]) count++;\n            if (i + 6 in grid && j + 6 in grid && !grid[i][j] && !grid[i + 1][j + 1] && grid[i + 2][j + 2] === color && grid[i + 3][j + 3] === color && grid[i + 4][j + 4] === color && !grid[i + 5][j + 5] && !grid[i + 6][j + 6]) count++;\n            if (i - 6 in grid && j + 6 in grid && !grid[i][j] && !grid[i - 1][j + 1] && grid[i - 2][j + 2] === color && grid[i - 3][j + 3] === color && grid[i - 4][j + 4] === color && !grid[i - 5][j + 5] && !grid[i - 6][j + 6]) count++;\n          }\n        }\n        return count;\n      }\n\n      function hasThree(color) {\n        var count = 0;\n\n        for (var i = 0; i < grid.length; i++) {\n          for (var j = 0; j < grid.length; j++) {\n            if (j + 4 in grid && !grid[i][j] && !grid[i][j + 1] && grid[i][j + 2] === color && grid[i][j + 3] === color && grid[i][j + 4] === color || j + 4 in grid && grid[i][j] === color && grid[i][j + 1] === color && grid[i][j + 2] === color && !grid[i][j + 3] && !grid[i][j + 4]) count++;\n            if (i + 4 in grid && !grid[i][j] && !grid[i + 1][j] && grid[i + 2][j] === color && grid[i + 3][j] === color && grid[i + 4][j] === color || i + 4 in grid && grid[i][j] === color && grid[i + 1][j] === color && grid[i + 2][j] === color && !grid[i + 3][j] && !grid[i + 4][j]) count++;\n            if (i + 4 in grid && j + 4 in grid && !grid[i][j] && !grid[i + 1][j + 1] && grid[i + 2][j + 2] === color && grid[i + 3][j + 3] === color && grid[i + 4][j + 4] === color || i + 4 in grid && j + 4 in grid && grid[i][j] === color && grid[i + 1][j + 1] === color && grid[i + 2][j + 2] === color && !grid[i + 3][j + 3] && !grid[i + 4][j + 4]) count++;\n            if (i - 4 in grid && j + 4 in grid && !grid[i][j] && !grid[i - 1][j + 1] && grid[i - 2][j + 2] === color && grid[i - 3][j + 3] === color && grid[i - 4][j + 4] === color || i - 4 in grid && j + 4 in grid && grid[i][j] === color && grid[i - 1][j + 1] === color && grid[i - 2][j + 2] === color && !grid[i - 3][j + 3] && !grid[i - 4][j + 4]) count++;\n          }\n        }\n        return count;\n      }\n\n      function hasOpenTwo(color) {\n        var count = 0;\n\n        for (var i = 0; i < grid.length; i++) {\n          for (var j = 0; j < grid.length; j++) {\n            if (j + 7 in grid && !grid[i][j] && !grid[i][j + 1] && !grid[i][j + 2] && grid[i][j + 3] === color && grid[i][j + 4] === color && !grid[i][j + 5] && !grid[i][j + 6] && !grid[i][j + 7]) count++;\n            if (i + 7 in grid && !grid[i][j] && !grid[i + 1][j] && !grid[i + 2][j] && grid[i + 3][j] === color && grid[i + 4][j] === color && !grid[i + 5][j] && !grid[i + 6][j] && !grid[i + 7][j]) count++;\n            if (i + 7 in grid && j + 7 in grid && !grid[i][j] && !grid[i + 1][j + 1] && !grid[i + 2][j + 2] && grid[i + 3][j + 3] === color && grid[i + 4][j + 4] === color && !grid[i + 5][j + 5] && !grid[i + 6][j + 6] && !grid[i + 7][j + 7]) count++;\n            if (i - 7 in grid && j + 7 in grid && !grid[i][j] && !grid[i - 1][j + 1] && !grid[i - 2][j + 2] && grid[i - 3][j + 3] === color && grid[i - 4][j + 4] === color && !grid[i - 5][j + 5] && !grid[i - 6][j + 6] && !grid[i - 7][j + 7]) count++;\n          }\n        }\n        return count;\n      }\n\n      function hasTwo(color) {\n        var count = 0;\n        for (var i = 0; i < grid.length; i++) {\n          for (var j = 0; j < grid.length; j++) {\n            if (j + 4 in grid && !grid[i][j] && !grid[i][j + 1] && !grid[i][j + 2] && grid[i][j + 3] === color && grid[i][j + 4] === color || j + 4 in grid && grid[i][j] === color && grid[i][j + 1] === color && !grid[i][j + 2] && !grid[i][j + 3] && !grid[i][j + 4]) count++;\n            if (i + 4 in grid && !grid[i][j] && !grid[i + 1][j] && !grid[i + 2][j] && grid[i + 3][j] === color && grid[i + 4][j] === color || i + 4 in grid && grid[i][j] === color && grid[i + 1][j] === color && !grid[i + 2][j] && !grid[i + 3][j] && !grid[i + 4][j]) count++;\n            if (i + 4 in grid && j + 4 in grid && !grid[i][j] && !grid[i + 1][j + 1] && !grid[i + 2][j + 2] && grid[i + 3][j + 3] === color && grid[i + 4][j + 4] === color || i + 4 in grid && j + 4 in grid && grid[i][j] === color && grid[i + 1][j + 1] === color && !grid[i + 2][j + 2] && !grid[i + 3][j + 3] && !grid[i + 4][j + 4]) count++;\n            if (i - 4 in grid && j + 4 in grid && !grid[i][j] && !grid[i - 1][j + 1] && !grid[i - 2][j + 2] && grid[i - 3][j + 3] === color && grid[i - 4][j + 4] === color || i - 4 in grid && j + 4 in grid && grid[i][j] === color && grid[i - 1][j + 1] === color && !grid[i - 2][j + 2] && !grid[i - 3][j + 3] && !grid[i - 4][j + 4]) count++;\n          }\n        }\n        return count;\n      }\n\n      var openFours = hasOpenFour(cpuColor);\n      var closedFours = hasFour(cpuColor) - openFours;\n      var openThrees = hasOpenThree(cpuColor);\n      var closedThrees = hasThree(cpuColor) - openThrees;\n      var openTwos = hasOpenTwo(cpuColor);\n      var closedTwos = hasTwo(cpuColor) - openTwos;\n\n      var oppOpenFours = hasOpenFour(oppColor);\n      var oppClosedFours = hasFour(oppColor) - oppOpenFours;\n      var oppOpenThrees = hasOpenThree(oppColor);\n      var oppClosedThrees = hasThree(oppColor) - oppOpenThrees;\n      var oppOpenTwos = hasOpenTwo(oppColor);\n      var oppClosedTwos = hasTwo(oppColor) - oppOpenTwos;\n\n      return 2 * openTwos + 1 * closedTwos + 200 * openThrees + 2 * closedThrees + 2000 * openFours + 200 * closedFours + 2000 * hasFive(cpuColor) - (2 * oppOpenTwos + 1 * oppClosedTwos + 2000 * oppOpenThrees + 20 * oppClosedThrees + 20000 * oppOpenFours + 2000 * oppClosedFours + 20000 * hasFive(oppColor));\n    }\n  }]);\n\n  return Computer;\n}(_player2.default);\n\n// hard code opening\n// evaluator function\n\n// zobrist and hashmap\n\n\nexports.default = Computer;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/computer.js\n");

/***/ }),

/***/ "./lib/display.js":
/*!************************!*\
  !*** ./lib/display.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _game = __webpack_require__(/*! ./game */ \"./lib/game.js\");\n\nvar _game2 = _interopRequireDefault(_game);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Display = function () {\n  function Display(board, ctx) {\n    _classCallCheck(this, Display);\n\n    this.board = board;\n    this.ctx = ctx;\n    this.drawBoard();\n  }\n\n  _createClass(Display, [{\n    key: \"drawBoard\",\n    value: function drawBoard() {\n      var canvasEl = document.getElementById(\"canvas\");\n      var ctx = this.ctx;\n      ctx.fillStyle = \"#E2C58B\";\n      ctx.fillRect(0, 0, canvasEl.width, canvasEl.height);\n      for (var i = 0; i <= 15; i++) {\n        ctx.beginPath();\n        ctx.strokeStyle = \"black\";\n        ctx.moveTo(i * 35 + .5, 0 + .5);\n        ctx.lineTo(i * 35 + .5, 35 * 15 + .5);\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.strokeStyle = \"black\";\n        ctx.moveTo(0 + .5, i * 35 + .5);\n        ctx.lineTo(35 * 15 + .5, i * 35 + .5);\n        ctx.stroke();\n      }\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(35 * 3 - 3, 35 * 3 - 3, 6, 6);\n      ctx.fillRect(35 * 11 - 3, 35 * 3 - 3, 6, 6);\n      ctx.fillRect(35 * 7 - 3, 35 * 7 - 3, 6, 6);\n      ctx.fillRect(35 * 3 - 3, 35 * 11 - 3, 6, 6);\n      ctx.fillRect(35 * 11 - 3, 35 * 11 - 3, 6, 6);\n    }\n  }, {\n    key: \"render\",\n    value: function render(pos) {\n      var board = this.board;\n      var ctx = this.ctx;\n\n      var _pos = _slicedToArray(pos, 2),\n          i = _pos[0],\n          j = _pos[1];\n\n      var gradient = ctx.createRadialGradient(j * 35, i * 35, 12, j * 35 - 5, i * 35 - 5, 20);\n      if (board[i][j] === 1) {\n        gradient.addColorStop(0, \"#fff\");\n        gradient.addColorStop(1, \"#bbb\");\n      } else {\n        gradient.addColorStop(0, \"#404040\");\n        gradient.addColorStop(1, \"#0d0d0d\");\n      }\n\n      ctx.fillStyle = gradient;\n      // board[i][j] === 1 ? \"white\" : \"black\";\n      ctx.beginPath();\n      ctx.arc(j * 35, i * 35, 15, 0, 2 * Math.PI);\n      ctx.closePath();\n      ctx.fill();\n    }\n  }]);\n\n  return Display;\n}();\n\nexports.default = Display;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9saWIvZGlzcGxheS5qcz9hZWJhIl0sIm5hbWVzIjpbIkRpc3BsYXkiLCJib2FyZCIsImN0eCIsImRyYXdCb2FyZCIsImNhbnZhc0VsIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImZpbGxTdHlsZSIsImZpbGxSZWN0Iiwid2lkdGgiLCJoZWlnaHQiLCJpIiwiYmVnaW5QYXRoIiwic3Ryb2tlU3R5bGUiLCJtb3ZlVG8iLCJsaW5lVG8iLCJzdHJva2UiLCJwb3MiLCJqIiwiZ3JhZGllbnQiLCJjcmVhdGVSYWRpYWxHcmFkaWVudCIsImFkZENvbG9yU3RvcCIsImFyYyIsIk1hdGgiLCJQSSIsImNsb3NlUGF0aCIsImZpbGwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7SUFFcUJBLE87QUFDbkIsbUJBQVlDLEtBQVosRUFBbUJDLEdBQW5CLEVBQXdCO0FBQUE7O0FBQ3RCLFNBQUtELEtBQUwsR0FBYUEsS0FBYjtBQUNBLFNBQUtDLEdBQUwsR0FBV0EsR0FBWDtBQUNBLFNBQUtDLFNBQUw7QUFDRDs7OztnQ0FFVTtBQUNULFVBQU1DLFdBQVdDLFNBQVNDLGNBQVQsQ0FBd0IsUUFBeEIsQ0FBakI7QUFDQSxVQUFNSixNQUFNLEtBQUtBLEdBQWpCO0FBQ0FBLFVBQUlLLFNBQUosR0FBZSxTQUFmO0FBQ0FMLFVBQUlNLFFBQUosQ0FBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CSixTQUFTSyxLQUE1QixFQUFtQ0wsU0FBU00sTUFBNUM7QUFDQSxXQUFLLElBQUlDLElBQUksQ0FBYixFQUFnQkEsS0FBSyxFQUFyQixFQUF5QkEsR0FBekIsRUFBOEI7QUFDNUJULFlBQUlVLFNBQUo7QUFDQVYsWUFBSVcsV0FBSixHQUFrQixPQUFsQjtBQUNBWCxZQUFJWSxNQUFKLENBQVdILElBQUUsRUFBRixHQUFNLEVBQWpCLEVBQW9CLElBQUcsRUFBdkI7QUFDQVQsWUFBSWEsTUFBSixDQUFXSixJQUFFLEVBQUYsR0FBTSxFQUFqQixFQUFxQixLQUFHLEVBQUgsR0FBTyxFQUE1QjtBQUNBVCxZQUFJYyxNQUFKOztBQUVBZCxZQUFJVSxTQUFKO0FBQ0FWLFlBQUlXLFdBQUosR0FBa0IsT0FBbEI7QUFDQVgsWUFBSVksTUFBSixDQUFXLElBQUcsRUFBZCxFQUFrQkgsSUFBRSxFQUFGLEdBQU0sRUFBeEI7QUFDQVQsWUFBSWEsTUFBSixDQUFXLEtBQUcsRUFBSCxHQUFPLEVBQWxCLEVBQXNCSixJQUFFLEVBQUYsR0FBTSxFQUE1QjtBQUNBVCxZQUFJYyxNQUFKO0FBQ0Q7QUFDRGQsVUFBSUssU0FBSixHQUFnQixPQUFoQjtBQUNBTCxVQUFJTSxRQUFKLENBQWEsS0FBRyxDQUFILEdBQUssQ0FBbEIsRUFBcUIsS0FBRyxDQUFILEdBQUssQ0FBMUIsRUFBNkIsQ0FBN0IsRUFBZ0MsQ0FBaEM7QUFDQU4sVUFBSU0sUUFBSixDQUFhLEtBQUcsRUFBSCxHQUFNLENBQW5CLEVBQXNCLEtBQUcsQ0FBSCxHQUFLLENBQTNCLEVBQThCLENBQTlCLEVBQWlDLENBQWpDO0FBQ0FOLFVBQUlNLFFBQUosQ0FBYSxLQUFHLENBQUgsR0FBSyxDQUFsQixFQUFxQixLQUFHLENBQUgsR0FBSyxDQUExQixFQUE2QixDQUE3QixFQUFnQyxDQUFoQztBQUNBTixVQUFJTSxRQUFKLENBQWEsS0FBRyxDQUFILEdBQUssQ0FBbEIsRUFBcUIsS0FBRyxFQUFILEdBQU0sQ0FBM0IsRUFBOEIsQ0FBOUIsRUFBaUMsQ0FBakM7QUFDQU4sVUFBSU0sUUFBSixDQUFhLEtBQUcsRUFBSCxHQUFNLENBQW5CLEVBQXNCLEtBQUcsRUFBSCxHQUFNLENBQTVCLEVBQStCLENBQS9CLEVBQWtDLENBQWxDO0FBQ0Q7OzsyQkFFTVMsRyxFQUFJO0FBQ1QsVUFBTWhCLFFBQVEsS0FBS0EsS0FBbkI7QUFDQSxVQUFNQyxNQUFNLEtBQUtBLEdBQWpCOztBQUZTLGdDQUdLZSxHQUhMO0FBQUEsVUFHRk4sQ0FIRTtBQUFBLFVBR0FPLENBSEE7O0FBSVQsVUFBTUMsV0FBV2pCLElBQUlrQixvQkFBSixDQUF5QkYsSUFBRSxFQUEzQixFQUErQlAsSUFBRSxFQUFqQyxFQUFxQyxFQUFyQyxFQUF5Q08sSUFBRSxFQUFGLEdBQUssQ0FBOUMsRUFBaURQLElBQUUsRUFBRixHQUFLLENBQXRELEVBQXlELEVBQXpELENBQWpCO0FBQ0EsVUFBSVYsTUFBTVUsQ0FBTixFQUFTTyxDQUFULE1BQWdCLENBQXBCLEVBQXVCO0FBQ3JCQyxpQkFBU0UsWUFBVCxDQUFzQixDQUF0QixFQUF5QixNQUF6QjtBQUNBRixpQkFBU0UsWUFBVCxDQUFzQixDQUF0QixFQUF5QixNQUF6QjtBQUNELE9BSEQsTUFHTztBQUNMRixpQkFBU0UsWUFBVCxDQUFzQixDQUF0QixFQUF5QixTQUF6QjtBQUNBRixpQkFBU0UsWUFBVCxDQUFzQixDQUF0QixFQUF5QixTQUF6QjtBQUNEOztBQUdEbkIsVUFBSUssU0FBSixHQUFnQlksUUFBaEI7QUFDQTtBQUNBakIsVUFBSVUsU0FBSjtBQUNBVixVQUFJb0IsR0FBSixDQUFRSixJQUFFLEVBQVYsRUFBY1AsSUFBRSxFQUFoQixFQUFvQixFQUFwQixFQUF3QixDQUF4QixFQUEyQixJQUFFWSxLQUFLQyxFQUFsQztBQUNBdEIsVUFBSXVCLFNBQUo7QUFDQXZCLFVBQUl3QixJQUFKO0FBQ0Q7Ozs7OztrQkFyRGtCMUIsTyIsImZpbGUiOiIuL2xpYi9kaXNwbGF5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdhbWUgZnJvbSBcIi4vZ2FtZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEaXNwbGF5IHtcbiAgY29uc3RydWN0b3IoYm9hcmQsIGN0eCkge1xuICAgIHRoaXMuYm9hcmQgPSBib2FyZDtcbiAgICB0aGlzLmN0eCA9IGN0eDtcbiAgICB0aGlzLmRyYXdCb2FyZCgpO1xuICB9XG5cbiAgZHJhd0JvYXJkKCl7XG4gICAgY29uc3QgY2FudmFzRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKTtcbiAgICBjb25zdCBjdHggPSB0aGlzLmN0eDtcbiAgICBjdHguZmlsbFN0eWxlPSBcIiNFMkM1OEJcIjtcbiAgICBjdHguZmlsbFJlY3QoMCwgMCwgY2FudmFzRWwud2lkdGgsIGNhbnZhc0VsLmhlaWdodCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPD0gMTU7IGkrKykge1xuICAgICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgY3R4LnN0cm9rZVN0eWxlID0gXCJibGFja1wiO1xuICAgICAgY3R4Lm1vdmVUbyhpKjM1KyAuNSwwICsuNSk7XG4gICAgICBjdHgubGluZVRvKGkqMzUgKy41LCAzNSoxNSArLjUpO1xuICAgICAgY3R4LnN0cm9rZSgpO1xuXG4gICAgICBjdHguYmVnaW5QYXRoKCk7XG4gICAgICBjdHguc3Ryb2tlU3R5bGUgPSBcImJsYWNrXCI7XG4gICAgICBjdHgubW92ZVRvKDAgKy41LCBpKjM1ICsuNSk7XG4gICAgICBjdHgubGluZVRvKDM1KjE1ICsuNSwgaSozNSArLjUpO1xuICAgICAgY3R4LnN0cm9rZSgpO1xuICAgIH1cbiAgICBjdHguZmlsbFN0eWxlID0gXCJibGFja1wiO1xuICAgIGN0eC5maWxsUmVjdCgzNSozLTMsIDM1KjMtMywgNiwgNik7XG4gICAgY3R4LmZpbGxSZWN0KDM1KjExLTMsIDM1KjMtMywgNiwgNik7XG4gICAgY3R4LmZpbGxSZWN0KDM1KjctMywgMzUqNy0zLCA2LCA2KTtcbiAgICBjdHguZmlsbFJlY3QoMzUqMy0zLCAzNSoxMS0zLCA2LCA2KTtcbiAgICBjdHguZmlsbFJlY3QoMzUqMTEtMywgMzUqMTEtMywgNiwgNik7XG4gIH1cblxuICByZW5kZXIocG9zKXtcbiAgICBjb25zdCBib2FyZCA9IHRoaXMuYm9hcmQ7XG4gICAgY29uc3QgY3R4ID0gdGhpcy5jdHg7XG4gICAgY29uc3QgW2ksal0gPSBwb3M7XG4gICAgY29uc3QgZ3JhZGllbnQgPSBjdHguY3JlYXRlUmFkaWFsR3JhZGllbnQoaiozNSwgaSozNSwgMTIsIGoqMzUtNSwgaSozNS01LCAyMCk7XG4gICAgaWYgKGJvYXJkW2ldW2pdID09PSAxKSB7XG4gICAgICBncmFkaWVudC5hZGRDb2xvclN0b3AoMCwgXCIjZmZmXCIpO1xuICAgICAgZ3JhZGllbnQuYWRkQ29sb3JTdG9wKDEsIFwiI2JiYlwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZ3JhZGllbnQuYWRkQ29sb3JTdG9wKDAsIFwiIzQwNDA0MFwiKTtcbiAgICAgIGdyYWRpZW50LmFkZENvbG9yU3RvcCgxLCBcIiMwZDBkMGRcIik7XG4gICAgfVxuXG5cbiAgICBjdHguZmlsbFN0eWxlID0gZ3JhZGllbnQ7XG4gICAgLy8gYm9hcmRbaV1bal0gPT09IDEgPyBcIndoaXRlXCIgOiBcImJsYWNrXCI7XG4gICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgIGN0eC5hcmMoaiozNSwgaSozNSwgMTUsIDAsIDIqTWF0aC5QSSk7XG4gICAgY3R4LmNsb3NlUGF0aCgpO1xuICAgIGN0eC5maWxsKCk7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/display.js\n");

/***/ }),

/***/ "./lib/game.js":
/*!*********************!*\
  !*** ./lib/game.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _board = __webpack_require__(/*! ./board */ \"./lib/board.js\");\n\nvar _board2 = _interopRequireDefault(_board);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar GRID_SIZE = 15;\nvar WINNING_SEQUENCE = 5;\nvar PLAYER1 = \"PLAYER1\";\nvar PLAYER2 = \"PLAYER2\";\n\nvar Game = function () {\n  function Game(player1, player2) {\n    var board = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new _board2.default(GRID_SIZE, WINNING_SEQUENCE);\n\n    _classCallCheck(this, Game);\n\n    this.player1 = player1;\n    this.player2 = player2;\n    this.board = board;\n    this.currentPlayer = PLAYER1;\n  }\n\n  _createClass(Game, [{\n    key: \"isOver\",\n    value: function isOver() {\n      return this.board.checkForWinner();\n    }\n  }, {\n    key: \"playTurn\",\n    value: function playTurn() {\n      if (this.currentPlayer === PLAYER1) {\n        this.player1.getMove(this.board);\n      } else {\n        this.player2.getMove(this.board);\n      }\n    }\n  }, {\n    key: \"switchPlayer\",\n    value: function switchPlayer() {\n      this.board.switchColor();\n      this.currentPlayer = this.currentPlayer === PLAYER1 ? PLAYER2 : PLAYER1;\n    }\n  }]);\n\n  return Game;\n}();\n\nexports.default = Game;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9saWIvZ2FtZS5qcz85M2M2Il0sIm5hbWVzIjpbIkdSSURfU0laRSIsIldJTk5JTkdfU0VRVUVOQ0UiLCJQTEFZRVIxIiwiUExBWUVSMiIsIkdhbWUiLCJwbGF5ZXIxIiwicGxheWVyMiIsImJvYXJkIiwiQm9hcmQiLCJjdXJyZW50UGxheWVyIiwiY2hlY2tGb3JXaW5uZXIiLCJnZXRNb3ZlIiwic3dpdGNoQ29sb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7O0FBRUEsSUFBTUEsWUFBWSxFQUFsQjtBQUNBLElBQU1DLG1CQUFtQixDQUF6QjtBQUNBLElBQU1DLFVBQVUsU0FBaEI7QUFDQSxJQUFNQyxVQUFVLFNBQWhCOztJQUVxQkMsSTtBQUNuQixnQkFBWUMsT0FBWixFQUFxQkMsT0FBckIsRUFBNkU7QUFBQSxRQUEvQ0MsS0FBK0MsdUVBQXZDLElBQUlDLGVBQUosQ0FBVVIsU0FBVixFQUFxQkMsZ0JBQXJCLENBQXVDOztBQUFBOztBQUMzRSxTQUFLSSxPQUFMLEdBQWVBLE9BQWY7QUFDQSxTQUFLQyxPQUFMLEdBQWVBLE9BQWY7QUFDQSxTQUFLQyxLQUFMLEdBQWFBLEtBQWI7QUFDQSxTQUFLRSxhQUFMLEdBQXFCUCxPQUFyQjtBQUNEOzs7OzZCQUVPO0FBQ04sYUFBTyxLQUFLSyxLQUFMLENBQVdHLGNBQVgsRUFBUDtBQUNEOzs7K0JBRVM7QUFDUixVQUFJLEtBQUtELGFBQUwsS0FBdUJQLE9BQTNCLEVBQW9DO0FBQ2xDLGFBQUtHLE9BQUwsQ0FBYU0sT0FBYixDQUFxQixLQUFLSixLQUExQjtBQUNELE9BRkQsTUFFTztBQUNMLGFBQUtELE9BQUwsQ0FBYUssT0FBYixDQUFxQixLQUFLSixLQUExQjtBQUNEO0FBQ0Y7OzttQ0FFYztBQUNiLFdBQUtBLEtBQUwsQ0FBV0ssV0FBWDtBQUNBLFdBQUtILGFBQUwsR0FBcUIsS0FBS0EsYUFBTCxLQUF1QlAsT0FBdkIsR0FBaUNDLE9BQWpDLEdBQTJDRCxPQUFoRTtBQUNEOzs7Ozs7a0JBdkJrQkUsSSIsImZpbGUiOiIuL2xpYi9nYW1lLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJvYXJkIGZyb20gXCIuL2JvYXJkXCI7XG5cbmNvbnN0IEdSSURfU0laRSA9IDE1O1xuY29uc3QgV0lOTklOR19TRVFVRU5DRSA9IDU7XG5jb25zdCBQTEFZRVIxID0gXCJQTEFZRVIxXCI7XG5jb25zdCBQTEFZRVIyID0gXCJQTEFZRVIyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWUge1xuICBjb25zdHJ1Y3RvcihwbGF5ZXIxLCBwbGF5ZXIyLCBib2FyZCA9IG5ldyBCb2FyZChHUklEX1NJWkUsIFdJTk5JTkdfU0VRVUVOQ0UpKXtcbiAgICB0aGlzLnBsYXllcjEgPSBwbGF5ZXIxO1xuICAgIHRoaXMucGxheWVyMiA9IHBsYXllcjI7XG4gICAgdGhpcy5ib2FyZCA9IGJvYXJkO1xuICAgIHRoaXMuY3VycmVudFBsYXllciA9IFBMQVlFUjE7XG4gIH1cblxuICBpc092ZXIoKXtcbiAgICByZXR1cm4gdGhpcy5ib2FyZC5jaGVja0Zvcldpbm5lcigpO1xuICB9XG5cbiAgcGxheVR1cm4oKXtcbiAgICBpZiAodGhpcy5jdXJyZW50UGxheWVyID09PSBQTEFZRVIxKSB7XG4gICAgICB0aGlzLnBsYXllcjEuZ2V0TW92ZSh0aGlzLmJvYXJkKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5wbGF5ZXIyLmdldE1vdmUodGhpcy5ib2FyZCk7XG4gICAgfVxuICB9XG5cbiAgc3dpdGNoUGxheWVyKCkge1xuICAgIHRoaXMuYm9hcmQuc3dpdGNoQ29sb3IoKTtcbiAgICB0aGlzLmN1cnJlbnRQbGF5ZXIgPSB0aGlzLmN1cnJlbnRQbGF5ZXIgPT09IFBMQVlFUjEgPyBQTEFZRVIyIDogUExBWUVSMTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/game.js\n");

/***/ }),

/***/ "./lib/player.js":
/*!***********************!*\
  !*** ./lib/player.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Player = function Player(name) {\n  _classCallCheck(this, Player);\n\n  this.name = name;\n};\n\nexports.default = Player;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9saWIvcGxheWVyLmpzPzVhMjgiXSwibmFtZXMiOlsiUGxheWVyIiwibmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7SUFBcUJBLE0sR0FDbkIsZ0JBQVlDLElBQVosRUFBaUI7QUFBQTs7QUFDZixPQUFLQSxJQUFMLEdBQVlBLElBQVo7QUFDRCxDOztrQkFIa0JELE0iLCJmaWxlIjoiLi9saWIvcGxheWVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWVyIHtcbiAgY29uc3RydWN0b3IobmFtZSl7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/player.js\n");

/***/ })

/******/ });