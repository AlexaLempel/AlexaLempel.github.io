(()=>{"use strict";const t="white",i="black";class s{constructor(t,s){this.gridSize=t,this.winningSequence=s,this.color=i,this.grid=this.buildGrid(this.gridSize),this.lastPos=null,this.stoneCount=0,this.jumpCounts=[0,0]}buildGrid(t){let i=[];for(let s=0;s<t;s++){let s=[];for(let i=0;i<t;i++)s.push(0);i.push(s)}return i}placeStone(i){const[s,e]=i;if(s<0||s>14||e<0||e>14||0!==this.grid[s][e])throw"Invalid move!";this.grid[s][e]=this.color===t?1:2,this.lastPos=i,this.stoneCount+=1}switchColor(){this.color=this.color===t?i:t}addJump(t){this.jumpCounts[t-1]+=1}checkForJump(){this.checkRowJump(),this.checkColJump(),this.checkUpDiagJump(),this.checkDownDiagJump()}checkRowJump(){const t=this.lastPos[0],i=this.lastPos[1],s=this.grid[t][i],e=1===s?2:1;let r=i-3;r>=0&&this.grid[t][r]===s&&this.grid[t][r+1]===e&&this.grid[t][r+2]===e&&(this.addJump(s),this.grid[t][r+1]=0,this.grid[t][r+2]=0),r=i+3,r<this.gridSize&&this.grid[t][r]===s&&this.grid[t][r-1]===e&&this.grid[t][r-2]===e&&(this.addJump(s),this.grid[t][r-1]=0,this.grid[t][r-2]=0)}checkColJump(){const t=this.lastPos[0],i=this.lastPos[1],s=this.grid[t][i],e=1===s?2:1;let r=t-3;r>=0&&this.grid[r][i]===s&&this.grid[r+1][i]===e&&this.grid[r+2][i]===e&&(this.addJump(s),this.grid[r+1][i]=0,this.grid[r+2][i]=0),r=t+3,r<this.gridSize&&this.grid[r][i]===s&&this.grid[r-1][i]===e&&this.grid[r-2][i]===e&&(this.addJump(s),this.grid[r-1][i]=0,this.grid[r-2][i]=0)}checkUpDiagJump(){const t=this.lastPos[0],i=this.lastPos[1],s=this.grid[t][i],e=1===s?2:1;let r=t-3,d=i-3;r>=0&&d>=0&&this.grid[r][d]===s&&this.grid[r+1][d+1]===e&&this.grid[r+2][d+2]===e&&(this.addJump(s),this.grid[r+1][d+1]=0,this.grid[r+2][d+2]=0),r=t+3,d=i+3,r<this.gridSize&&d<this.gridSize&&this.grid[r][d]===s&&this.grid[r-1][d-1]===e&&this.grid[r-2][d-2]===e&&(this.addJump(s),this.grid[r-1][d-1]=0,this.grid[r-2][d-2]=0)}checkDownDiagJump(){const t=this.lastPos[0],i=this.lastPos[1],s=this.grid[t][i],e=1===s?2:1;let r=t-3,d=i+3;r>=0&&d<this.gridSize&&this.grid[r][d]===s&&this.grid[r+1][d-1]===e&&this.grid[r+2][d-2]===e&&(this.addJump(s),this.grid[r+1][d-1]=0,this.grid[r+2][d-2]=0),r=t+3,d=i-3,r<this.gridSize&&d>=0&&this.grid[r][d]===s&&this.grid[r-1][d+1]===e&&this.grid[r-2][d+2]===e&&(this.addJump(s),this.grid[r-1][d+1]=0,this.grid[r-2][d+2]=0)}checkForWinner(){return null!==this.lastPos&&(this.jumpCounts[0]>=1||this.jumpCounts[1]>=1||!!this.rowWinner()||!!this.columnWinner()||!!this.upDiagWinner()||!!this.downDiagWinner())}rowWinner(){const t=this.lastPos[0],i=this.lastPos[1],s=this.grid[t][i];let e=0;for(let r=i-4;r<=i+4;r++)if(!(r<0)){if(r>=this.gridSize)break;if(this.grid[t][r]===s?e+=1:e=0,e===this.winningSequence)return!0}}columnWinner(){const t=this.lastPos[0],i=this.lastPos[1],s=this.grid[t][i];let e=0;for(let r=t-4;r<=t+4;r++)if(!(r<0)){if(r>=this.gridSize)break;if(this.grid[r][i]===s?e+=1:e=0,e===this.winningSequence)return!0}}upDiagWinner(){const t=this.lastPos[0],i=this.lastPos[1],s=this.grid[t][i];let e=0;for(let r=-4;r<=4;r++){const d=t-r,h=i+r;if(!(d>=this.gridSize||h<0)){if(d<0||h>=this.gridSize)break;if(this.grid[d][h]===s?e+=1:e=0,e===this.winningSequence)return!0}}}downDiagWinner(){const t=this.lastPos[0],i=this.lastPos[1],s=this.grid[t][i];let e=0;for(let r=-4;r<=4;r++){const d=t+r,h=i+r;if(d>=this.gridSize||h>=this.gridSize)break;if(!(d<0||h<0)&&(this.grid[d][h]===s?e+=1:e=0,e===this.winningSequence))return!0}}}const e="PLAYER1";class r{constructor(t,i,r=new s(15,5)){this.player1=t,this.player2=i,this.board=r,this.currentPlayer=e}isOver(){return this.board.checkForWinner()}switchPlayer(){this.board.switchColor(),this.currentPlayer=this.currentPlayer===e?"PLAYER2":e}}class d{constructor(t,i){this.board=t,this.ctx=i,this.drawBoard()}drawBoard(){const t=document.getElementById("canvas"),i=this.ctx;i.fillStyle="#e3fcfa",i.fillRect(0,0,t.width,t.height);for(let t=0;t<=14;t++)i.beginPath(),i.strokeStyle="black",i.moveTo(35*t+35.5,35.5),i.lineTo(35*t+35.5,525),i.stroke(),i.beginPath(),i.strokeStyle="black",i.moveTo(35.5,35*t+35.5),i.lineTo(525,35*t+35.5),i.stroke(),i.closePath();i.fillStyle="black",i.fillRect(137,137,6,6),i.fillRect(417,137,6,6),i.fillRect(277,277,6,6),i.fillRect(137,417,6,6),i.fillRect(417,417,6,6)}renderPos(t){const i=this.board,s=this.ctx,[e,r]=t,d=s.createRadialGradient(35*r+35,35*e+35,12,35*r+30,35*e+30,20);0!==i[e][r]&&(1===i[e][r]?(d.addColorStop(0,"#fff"),d.addColorStop(1,"#bbb")):(d.addColorStop(0,"#404040"),d.addColorStop(1,"#0d0d0d")),s.fillStyle=d,s.beginPath(),s.arc(35*r+35,35*e+35,15,0,2*Math.PI),s.closePath(),s.fill())}render(t){this.board=t.grid;for(let i=0;i<t.gridSize;i++)for(let s=0;s<t.gridSize;s++)this.renderPos([i,s])}}class h{constructor(t){this.name=t}}document.addEventListener("DOMContentLoaded",(()=>{const t=document.getElementById("canvas"),i=t.getContext("2d");t.width=561,t.height=561;const s=new h("Player1");let e=new h("Player2"),o=new r(s,e),n=new d(o.board.grid,i);const l=i=>{const s=i.pageY-t.offsetTop-35,e=i.pageX-t.offsetLeft-35,r=[Math.round(s/35),Math.round(e/35)];try{o.board.placeStone(r),o.board.checkForJump(),n.drawBoard(),n.render(o.board),o.switchPlayer(),o.isOver()&&(t.removeEventListener("mousedown",l),setTimeout((()=>{a.classList.add("active-modal")}),1500))}catch(t){console.log(t)}},a=document.getElementById("game-over-modal"),c=h=>{h.preventDefault(),o=new r(s,e),n=new d(o.board.grid,i),a.classList.remove("active-modal"),t.addEventListener("mousedown",l)};document.getElementById("restart-button").addEventListener("click",c),document.getElementById("yes").addEventListener("click",c),document.getElementById("no").addEventListener("click",(t=>{t.preventDefault(),a.classList.remove("active-modal")})),t.addEventListener("mousedown",l)}))})();